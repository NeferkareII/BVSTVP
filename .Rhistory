1, 1, 1, 1, 1), ncol = 5, byrow = TRUE),
heights = c(.5, 10, 2), widths = c(1, 6, 6, 6, .2))
plot.new()
par(mar = c(0, 0, 2, 0), mgp=c(1, .5, 0))
ylim <- c(-3, 5)
plot(predict(res_SV$RI), ylim = ylim, xaxt = "n", main = "Ridge")
lines(mod_data$inf, col = "forestgreen", lwd = 0.00001)
mtext("Inflation", 2, line = 2, cex = 0.8)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
pdf("predict_infl.pdf", width = 9, height = 6)
labs = zoo::as.yearqtr(seq(as.Date("1961/1/1"), as.Date("2015/12/31"), by = "quarter"))[c(rep(FALSE, 25), TRUE)]
labs = format(format(labs, "%Y"))
layout(matrix(c(1, 1, 1, 1, 1,
1, 2, 3, 4, 1,
1, 1, 1, 1, 1), ncol = 5, byrow = TRUE),
heights = c(.5, 10, 2), widths = c(1, 6, 6, 6, .2))
plot.new()
par(mar = c(0, 0, 2, 0), mgp=c(1, .5, 0))
ylim <- c(-3, 5)
plot(predict(res_SV$RI), ylim = ylim, xaxt = "n", main = "Ridge")
lines(mod_data$inf, col = "forestgreen", lwd = 0.7)
mtext("Inflation", 2, line = 2, cex = 0.8)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(predict(res_SV$LS), ylim = ylim, xaxt = "n", yaxt = "n", main = "Lasso")
lines(mod_data$inf, col = "forestgreen", lwd = 0.7)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(predict(res_SV$TG), ylim = ylim, xaxt = "n", yaxt = "n", main = "Triple Gamma")
lines(mod_data$inf, col = "forestgreen", lwd = 0.7)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
dev.off()
6/9 * 6
# LPDS plot SV
Tmax <- nrow(mod_data) - 1
pdf("predict_infl.pdf", width = 6, height = 4)
labs = zoo::as.yearqtr(seq(as.Date("1961/1/1"), as.Date("2015/12/31"), by = "quarter"))[c(rep(FALSE, 25), TRUE)]
labs = format(format(labs, "%Y"))
layout(matrix(c(1, 1, 1, 1, 1,
1, 2, 3, 4, 1,
1, 1, 1, 1, 1), ncol = 5, byrow = TRUE),
heights = c(.5, 10, 2), widths = c(1, 6, 6, 6, .2))
plot.new()
par(mar = c(0, 0, 2, 0), mgp=c(1, .5, 0))
ylim <- c(-3, 5)
plot(predict(res_SV$RI), ylim = ylim, xaxt = "n", main = "Ridge")
lines(mod_data$inf, col = "forestgreen", lwd = 0.7)
mtext("Inflation", 2, line = 2, cex = 0.8)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(predict(res_SV$LS), ylim = ylim, xaxt = "n", yaxt = "n", main = "Lasso")
lines(mod_data$inf, col = "forestgreen", lwd = 0.7)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(predict(res_SV$TG), ylim = ylim, xaxt = "n", yaxt = "n", main = "Triple Gamma")
lines(mod_data$inf, col = "forestgreen", lwd = 0.7)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
dev.off()
pdf("predict_infl.pdf", width = 6, height = 4)
labs = zoo::as.yearqtr(seq(as.Date("1961/1/1"), as.Date("2015/12/31"), by = "quarter"))[c(rep(FALSE, 25), TRUE)]
labs = format(format(labs, "%Y"))
layout(matrix(c(1, 1, 1, 1, 1,
1, 2, 3, 4, 1,
1, 1, 1, 1, 1), ncol = 5, byrow = TRUE),
heights = c(.5, 10, 2), widths = c(2, 6, 6, 6, .2))
plot.new()
par(mar = c(0, 0, 2, 0), mgp=c(1, .5, 0))
ylim <- c(-3, 5)
plot(predict(res_SV$RI), ylim = ylim, xaxt = "n", main = "Ridge")
lines(mod_data$inf, col = "forestgreen", lwd = 0.7)
mtext("Inflation", 2, line = 2, cex = 0.8)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(predict(res_SV$LS), ylim = ylim, xaxt = "n", yaxt = "n", main = "Lasso")
lines(mod_data$inf, col = "forestgreen", lwd = 0.7)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(predict(res_SV$TG), ylim = ylim, xaxt = "n", yaxt = "n", main = "Triple Gamma")
lines(mod_data$inf, col = "forestgreen", lwd = 0.7)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
dev.off()
pdf("predict_infl.pdf", width = 6, height = 4)
labs = zoo::as.yearqtr(seq(as.Date("1961/1/1"), as.Date("2015/12/31"), by = "quarter"))[c(rep(FALSE, 25), TRUE)]
labs = format(format(labs, "%Y"))
layout(matrix(c(1, 1, 1, 1, 1,
1, 2, 3, 4, 1,
1, 1, 1, 1, 1), ncol = 5, byrow = TRUE),
heights = c(.5, 10, 2), widths = c(2, 6, 6, 6, .2))
plot.new()
par(mar = c(0, 0, 2, 0), mgp=c(1, .5, 0))
ylim <- c(-3, 5)
plot(predict(res_SV$RI), ylim = ylim, xaxt = "n", main = "Ridge")
lines(mod_data$inf, col = "forestgreen", lwd = 0.5)
mtext("Inflation", 2, line = 2, cex = 0.8)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(predict(res_SV$LS), ylim = ylim, xaxt = "n", yaxt = "n", main = "Lasso")
lines(mod_data$inf, col = "forestgreen", lwd = 0.5)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(predict(res_SV$TG), ylim = ylim, xaxt = "n", yaxt = "n", main = "Triple Gamma")
lines(mod_data$inf, col = "forestgreen", lwd = 0.5)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
dev.off()
# Create plot of states comparing IG and ridge
pdf("states.pdf", width = 6, height = 6)
# Extract labels from time series
labs = zoo::as.yearqtr(seq(as.Date("1961/1/1"), as.Date("2015/12/31"), by = "quarter"))[c(rep(FALSE, 15), TRUE)]
labs = format(format(labs, "%Y"))
layout(matrix(c(1, 1, 1, 1,
1, 2, 3, 1,
1, 4, 5, 1,
1, 6, 7, 1,
1, 1, 1, 1), ncol = 4, byrow = TRUE),
heights = c(.5, 10, 10, 10, 2), widths = c(1, 6, 6, 1))
plot.new()
par(mar = c(0, 0, 2, 0), mgp=c(1, .5, 0))
ylim <- c(-1.2, .6)
plot(res_SV$IG$beta$beta_X1, main = "Inverse Gamma", ylim = ylim, xaxt = "n")
mtext(bquote(beta ~ "of first lag of inflation"), 2, line = 2, cex = 0.8)
plot(res$RI$beta$beta_X1, main = "Ridge", ylim = ylim, xaxt = "n", yaxt = "n")
ylim <- c(-.15, .15)
par(mar = c(0, 0, 0, 0), mgp=c(1, .5, 0))
plot(res_SV$IG$beta$beta_dow, ylim = ylim, xaxt = "n", yaxt = "n")
plot(res_SV$RI$beta$beta_dow, ylim = ylim, xaxt = "n", yaxt = "n")
axis(4)
mtext(bquote(beta ~ "of Dow Jones"), 4, line = 2, cex = 0.8)
plot(res_SV$IG$beta$beta_treas, ylim = c(-.4, .6), xaxt = "n")
mtext(bquote(beta ~ "of Treasury Bill"), 2, line = 2, cex = 0.8)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 15), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 15), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(res_SV$RI$beta$beta_treas, ylim = c(-.4, .6), xaxt = "n", yaxt = "n")
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 15), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 15), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
dev.off()
pdf("states_appl.pdf", width = 6, height = 6)
layout(matrix(c(1, 1, 1, 1, 1,
1, 2, 3, 4, 1,
1, 5, 6, 7, 1,
1, 8, 9, 10, 1,
1, 1, 1, 1, 1), ncol = 5, byrow = TRUE),
heights = c(.5, 10, 10, 10, 2), widths = c(1, 4.5, 4.5, 4.5, 1))
plot.new()
par(mar = c(0, 0, 2, 0), mgp=c(1, .5, 0))
plot(res_SV$RI$beta$beta_X1, main = "Ridge", ylim = c(-.6, 0.4), xaxt = "n")
mtext(bquote(beta ~ "of first lag of inflation"), 2, line = 1.5, cex = 0.8)
plot(res_SV$LS$beta$beta_X1, main = "Lasso", ylim = c(-.6, 0.4), xaxt = "n", yaxt = "n")
plot(res_SV$TG$beta$beta_X1, main = "Triple Gamma", ylim = c(-.6, 0.4), xaxt = "n", yaxt = "n")
par(mar = c(0, 0, 0, 0), mgp=c(1, .5, 0))
plot(res_SV$RI$beta$beta_dow, ylim = c(-0.03, 0.04), xaxt = "n", yaxt = "n")
plot(res_SV$LS$beta$beta_dow, ylim = c(-0.03, 0.04), xaxt = "n", yaxt = "n")
plot(res_SV$TG$beta$beta_dow, ylim = c(-0.03, 0.04), xaxt = "n", yaxt = "n")
axis(4)
mtext(bquote(beta ~ "of Dow Jones"), 4, line = 2, cex = 0.8)
plot(res_SV$RI$beta$beta_treas, ylim = c(-.3, .5), xaxt = "n")
mtext(bquote(beta ~ "of Treasury Bill"), 2, line = 1.5, cex = 0.8)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 15), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 15), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(res_SV$LS$beta$beta_treas, ylim = c(-.3, .5), xaxt = "n", yaxt = "n")
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 15), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 15), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(res_SV$TG$beta$beta_treas, ylim = c(-.3, .5), xaxt = "n", yaxt = "n")
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 15), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 15), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
dev.off()
pdf("predict_infl.pdf", width = 6, height = 4)
labs = zoo::as.yearqtr(seq(as.Date("1961/1/1"), as.Date("2015/12/31"), by = "quarter"))[c(rep(FALSE, 25), TRUE)]
labs = format(format(labs, "%Y"))
layout(matrix(c(1, 1, 1, 1, 1,
1, 2, 3, 4, 1,
1, 1, 1, 1, 1), ncol = 5, byrow = TRUE),
heights = c(.5, 10, 2), widths = c(2, 6, 6, 6, .2))
plot.new()
par(mar = c(0, 0, 2, 0), mgp=c(1, .5, 0))
ylim <- c(-3, 5)
plot(predict(res_SV$RI), ylim = ylim, xaxt = "n", main = "Ridge")
lines(mod_data$inf, col = "forestgreen", lwd = 0.5)
mtext("Inflation", 2, line = 2, cex = 0.8)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(predict(res_SV$LS), ylim = ylim, xaxt = "n", yaxt = "n", main = "Lasso")
lines(mod_data$inf, col = "forestgreen", lwd = 0.5)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(predict(res_SV$TG), ylim = ylim, xaxt = "n", yaxt = "n", main = "Triple Gamma")
lines(mod_data$inf, col = "forestgreen", lwd = 0.5)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
dev.off()
# LPDS plot SV
Tmax <- nrow(mod_data) - 1
T0 <- Tmax - 100
scenarios <- data.frame()
failed <- c()
for (i in 1:(length(T0:Tmax) * length(mods))) {
row <- try(readRDS(paste0("./cluster_res/res", i, ".rda")))
if (class(row) == "try-error") {
failed <- c(failed, i)
} else {
scenarios <- rbind(scenarios, row)
}
}
cumu_LPDS <- scenarios %>%
group_by(mod) %>%
mutate(cum_lpds = cumsum(LPDS)) %>%
select(-LPDS) %>%
tidyr::pivot_wider(names_from = mod, values_from = cum_lpds) %>%
select(TG, HS, DG, LS, RI, IG, t)
pdf("LPDS_inf.pdf", width = 9, height = 6)
# Plot results
par(mar=c(6,4,1,1))
color <- c("firebrick3",
"firebrick3",
"forestgreen",
"forestgreen",
"cyan2",
"black")
lty <- c(1, 2, 1, 2, 1, 1)
names <-  c("Triple Gamma",
"Horseshoe",
"Double Gamma",
"Lasso",
"Ridge",
"Inverse Gamma")
matplot(cumu_LPDS[, 1:6], type = "l", ylab = "Cumulative LPDS",
xaxt = "n", xlab = "", col = color, lty = lty, lwd = 1.5)
# Extract labels from time series
labs = zoo::as.yearmon(seq(as.Date("1961/1/1"), as.Date("2015/12/31"), by = "quarter"))[T0:(Tmax-1)][c(rep(FALSE, 4), TRUE)]
# Create custom axis labels
axis(1, at = (1:length(T0:(Tmax-1)))[c(rep(FALSE, 4), TRUE)], labels = FALSE)
text(x=(1:length(T0:(Tmax-1)))[c(rep(FALSE, 4), TRUE)],
y=par()$usr[3]-0.05*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=TRUE)
# Add legend
legend("topright", names, col = color,
lty = lty, lwd = 1.5, bty = "n", cex = 0.8)
dev.off()
# LPDS plot no SV
Tmax <- nrow(mod_data) - 1
T0 <- Tmax - 100
scenarios <- data.frame()
failed <- c()
for (i in 1:(length(T0:Tmax) * length(mods))) {
row <- try(readRDS(paste0("./cluster_res_nosv/res", i, ".rda")))
if (class(row) == "try-error") {
failed <- c(failed, i)
} else {
scenarios <- rbind(scenarios, row)
}
}
cumu_LPDS <- scenarios %>%
group_by(mod) %>%
mutate(cum_lpds = cumsum(LPDS)) %>%
select(-LPDS) %>%
tidyr::pivot_wider(names_from = mod, values_from = cum_lpds) %>%
select(TG, HS, DG, LS, RI, IG, t)
pdf("LPDS_inf_nosv.pdf", width = 9, height = 9)
# Plot results
par(mar=c(6,4,1,1))
color <- c("firebrick3",
"firebrick3",
"forestgreen",
"forestgreen",
"cyan2",
"black")
lty <- c(1, 2, 1, 2, 1, 1)
names <-  c("Triple Gamma",
"Horseshoe",
"Double Gamma",
"Lasso",
"Ridge",
"Inverse Gamma")
matplot(cumu_LPDS[, 1:6], type = "l", ylab = "Cumulative LPDS",
xaxt = "n", xlab = "", col = color, lty = lty, lwd = 1.5)
# Extract labels from time series
labs = zoo::as.yearmon(seq(as.Date("1961/1/1"), as.Date("2015/12/31"), by = "quarter"))[T0:(Tmax-1)][c(rep(FALSE, 4), TRUE)]
# Create custom axis labels
axis(1, at = (1:length(T0:(Tmax-1)))[c(rep(FALSE, 4), TRUE)], labels = FALSE)
text(x=(1:length(T0:(Tmax-1)))[c(rep(FALSE, 4), TRUE)],
y=par()$usr[3]-0.05*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=TRUE)
# Add legend
legend("topright", names, col = color,
lty = lty, lwd = 1.5, bty = "n", cex = 0.8)
dev.off()
# Calculate rhos
d <- ncol(mod_data)
# DG
DG_bm_rho <- 1/(res$DG$tau2 + 1)
DG_th_rho <- 1/(res$DG$xi2 + 1)
# LS
LS_bm_rho <- 1/(res$LS$tau2 + 1)
LS_th_rho <- 1/(res$LS$xi2 + 1)
# TG
tau2_TG <- 2 * res$TG$tau2 * res$TG$a_tau[,rep(1,d)] / (res$TG$lambda2 * res$TG$lambda2_B[,rep(1,d)] * res$TG$a_tau[,rep(1,d)])
TG_bm_rho <- 1/(tau2_TG + 1)
xi2_TG <-  2 * res$TG$xi2 * res$TG$c_xi[,rep(1,d)] / (res$TG$kappa2 * res$TG$kappa2_B[,rep(1,d)] * res$TG$a_xi[,rep(1,d)])
TG_th_rho <- 1/(xi2_TG + 1)
# HS
tau2_HS <- 2 * res$HS$tau2 * 0.5 / (res$HS$lambda2 * res$HS$lambda2_B[,rep(1,d)] * 0.5)
HS_bm_rho <- 1/(tau2_TG + 1)
xi2_HS <-  2 * res$HS$xi2 * 0.5 / (res$HS$kappa2 * res$HS$kappa2_B[,rep(1,d)] * 0.5)
HS_th_rho <- 1/(xi2_HS + 1)
write.csv(DG_bm_rho, "DG_bm_rho.csv", row.names = FALSE)
write.csv(DG_th_rho, "DG_th_rho.csv", row.names = FALSE)
write.csv(TG_bm_rho, "TG_bm_rho.csv", row.names = FALSE)
write.csv(TG_th_rho, "TG_th_rho.csv", row.names = FALSE)
write.csv(LS_bm_rho, "LS_bm_rho.csv", row.names = FALSE)
write.csv(LS_th_rho, "LS_th_rho.csv", row.names = FALSE)
write.csv(HS_bm_rho, "HS_bm_rho.csv", row.names = FALSE)
write.csv(HS_th_rho, "HS_th_rho.csv", row.names = FALSE)
pdf("states_appl.pdf", width = 6, height = 6)
labs = zoo::as.yearqtr(seq(as.Date("1961/1/1"), as.Date("2015/12/31"), by = "quarter"))[[c(rep(FALSE, 25), TRUE)]
labs = format(format(labs, "%Y"))
layout(matrix(c(1, 1, 1, 1, 1,
1, 2, 3, 4, 1,
1, 5, 6, 7, 1,
1, 8, 9, 10, 1,
1, 1, 1, 1, 1), ncol = 5, byrow = TRUE),
heights = c(.5, 10, 10, 10, 2), widths = c(1, 4.5, 4.5, 4.5, 1))
plot.new()
par(mar = c(0, 0, 2, 0), mgp=c(1, .5, 0))
plot(res_SV$RI$beta$beta_X1, main = "Ridge", ylim = c(-.6, 0.4), xaxt = "n")
mtext(bquote(beta ~ "of first lag of inflation"), 2, line = 1.5, cex = 0.8)
plot(res_SV$LS$beta$beta_X1, main = "Lasso", ylim = c(-.6, 0.4), xaxt = "n", yaxt = "n")
plot(res_SV$TG$beta$beta_X1, main = "Triple Gamma", ylim = c(-.6, 0.4), xaxt = "n", yaxt = "n")
par(mar = c(0, 0, 0, 0), mgp=c(1, .5, 0))
plot(res_SV$RI$beta$beta_dow, ylim = c(-0.03, 0.04), xaxt = "n", yaxt = "n")
plot(res_SV$LS$beta$beta_dow, ylim = c(-0.03, 0.04), xaxt = "n", yaxt = "n")
plot(res_SV$TG$beta$beta_dow, ylim = c(-0.03, 0.04), xaxt = "n", yaxt = "n")
axis(4)
mtext(bquote(beta ~ "of Dow Jones"), 4, line = 2, cex = 0.8)
plot(res_SV$RI$beta$beta_treas, ylim = c(-.3, .5), xaxt = "n")
mtext(bquote(beta ~ "of Treasury Bill"), 2, line = 1.5, cex = 0.8)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(res_SV$LS$beta$beta_treas, ylim = c(-.3, .5), xaxt = "n", yaxt = "n")
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(res_SV$TG$beta$beta_treas, ylim = c(-.3, .5), xaxt = "n", yaxt = "n")
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
dev.off()
pdf("states_appl.pdf", width = 6, height = 6)
labs = zoo::as.yearqtr(seq(as.Date("1961/1/1"), as.Date("2015/12/31"), by = "quarter"))[c(rep(FALSE, 25), TRUE)]
labs = format(format(labs, "%Y"))
layout(matrix(c(1, 1, 1, 1, 1,
1, 2, 3, 4, 1,
1, 5, 6, 7, 1,
1, 8, 9, 10, 1,
1, 1, 1, 1, 1), ncol = 5, byrow = TRUE),
heights = c(.5, 10, 10, 10, 2), widths = c(1, 4.5, 4.5, 4.5, 1))
plot.new()
par(mar = c(0, 0, 2, 0), mgp=c(1, .5, 0))
plot(res_SV$RI$beta$beta_X1, main = "Ridge", ylim = c(-.6, 0.4), xaxt = "n")
mtext(bquote(beta ~ "of first lag of inflation"), 2, line = 1.5, cex = 0.8)
plot(res_SV$LS$beta$beta_X1, main = "Lasso", ylim = c(-.6, 0.4), xaxt = "n", yaxt = "n")
plot(res_SV$TG$beta$beta_X1, main = "Triple Gamma", ylim = c(-.6, 0.4), xaxt = "n", yaxt = "n")
par(mar = c(0, 0, 0, 0), mgp=c(1, .5, 0))
plot(res_SV$RI$beta$beta_dow, ylim = c(-0.03, 0.04), xaxt = "n", yaxt = "n")
plot(res_SV$LS$beta$beta_dow, ylim = c(-0.03, 0.04), xaxt = "n", yaxt = "n")
plot(res_SV$TG$beta$beta_dow, ylim = c(-0.03, 0.04), xaxt = "n", yaxt = "n")
axis(4)
mtext(bquote(beta ~ "of Dow Jones"), 4, line = 2, cex = 0.8)
plot(res_SV$RI$beta$beta_treas, ylim = c(-.3, .5), xaxt = "n")
mtext(bquote(beta ~ "of Treasury Bill"), 2, line = 1.5, cex = 0.8)
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(res_SV$LS$beta$beta_treas, ylim = c(-.3, .5), xaxt = "n", yaxt = "n")
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
plot(res_SV$TG$beta$beta_treas, ylim = c(-.3, .5), xaxt = "n", yaxt = "n")
axis(1, at = (1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)], labels = FALSE)
text(x=(1:nrow(mod_data))[c(rep(FALSE, 25), TRUE)],
y=par()$usr[3]-0.04*(par()$usr[4]-par()$usr[3]),
labels=labs, srt=45, adj=1, xpd=NA)
dev.off()
setwd("C:/Users/Peter/OneDrive/Dateien/BVS_chapter")
library(shrinkTVP)
library(BVSTVP)
library(dplyr)
library(doParallel)
library(foreach)
mod_data <- read.csv("inf_data.csv")
mods <- c("IG", "RI", "TG", "HS", "DG", "LS")
mod <- BVS_TVP(inf ~ ., mod_data, niter = niter, nburn = nburn, nthin = nthin, sv = FALSE, hyperprior_param = list(s0 = 0.001, S0 = 0.001),
sv_param = list(Bmu = 100))
niter <- 60000
nburn <- 10000
nthin <- 10
set.seed(12)
blas_set_num_threads(1)
mod <- BVS_TVP(inf ~ ., mod_data, niter = niter, nburn = nburn, nthin = nthin, sv = FALSE, hyperprior_param = list(s0 = 0.001, S0 = 0.001),
sv_param = list(Bmu = 100))
mod <- shrinkTVP(inf ~ ., mod_data, niter = niter, nburn = nburn, nthin = nthin, mod_type = "triple", sv = FALSE,
sv_param = list(Bmu = 100))
plot(mod$theta_sr[,"beta_treas"])
mod$theta_sr
plot(mod$theta_sr[,"theta_sr_treas"])
niter <- 60000
nburn <- 10000
nthin <- 10
set.seed(12)
blas_set_num_threads(1)
RhpcBLASctl::blas_set_num_threads(1)
niter <- 60000
nburn <- 10000
nthin <- 10
set.seed(12)
mod <- shrinkTVP(inf ~ ., mod_data, niter = niter, nburn = nburn, nthin = nthin, mod_type = "triple", sv = FALSE,
sv_param = list(Bmu = 100))
xi2_TG <-  2 * res$TG$xi2 * res$TG$c_xi[,rep(1,d)] / (res$TG$kappa2 * res$TG$kappa2_B[,rep(1,d)] * res$TG$a_xi[,rep(1,d)])
xi2_TG <-  2 * mod$xi2 * mod$c_xi[,rep(1,d)] / (mod$kappa2 * mod$kappa2_B[,rep(1,d)] * mod$a_xi[,rep(1,d)])
d <- 18
xi2_TG <-  2 * mod$xi2 * mod$c_xi[,rep(1,d)] / (mod$kappa2 * mod$kappa2_B[,rep(1,d)] * mod$a_xi[,rep(1,d)])
dim(mod$xi2)
head(xi2_TG)
plot(density(xi2_TG[,"xi2_treas"]))
plot(density(xi2_TG[,"xi2_treas"], from = 0, to = 10))
plot(mod$theta_sr[,"theta_sr_treas"])
plot(density(xi2_TG[,"xi2_treas"], from = 0, to = 3))
plot(density(xi2_TG[,"xi2_treas"], from = 0, to = 3), main = bquote(xi^2 ~ "of Treasury bill"))
plot(density(mod$theta_sr[,"theta_sr_treas"]), main = )
plot(density(xi2_TG[,"xi2_treas"], from = 0, to = 3), main = bquote(xi^2 ~ "of Treasury bill"))
plot(density(mod$theta_sr[,"theta_sr_treas"]), main =  bquote(sqrt(theta) ~ "of Treasury bill"))
install.packages("bayesreg")
library(bayesreg)
data <- data.frame(y = rnorm(200), x1  =rnorm(200), x2 = rnorm(200))
mod <- bayesreg(y ~ ., data)
summary(mod)
mod <- bayesreg(y ~ ., data, n.samples = 10000)
system.time(mod <- bayesreg(y ~ ., data, n.samples = 10000))
library(shrinkTVP)
system.time(mod <- shrinkTVP(y ~ ., data))
mod
system.time(mod <- bayesreg(y ~ ., data, n.samples = 10000))
mod
plot(mod)
plot(mod$beta)
mod$beta
plot(mod$beta[1,])
plot(density(mod$beta[1,]))
system.time(mod <- bayesreg(y ~ ., data, n.samples = 10000, prior = "hs+"))
plot(mod$beta[1,])
plot(density(mod$beta[1,]))
summary(mod)
system.time(mod <- bayesreg(y ~ ., data, n.samples = 10000, prior = "hs+", thin = 1))
system.time(mod <- bayesreg(y ~ ., data, n.samples = 10000, prior = "hs+", thin = 5))
system.time(mod <- bayesreg(y ~ ., data, n.samples = 10000, prior = "hs+", thin = 5))
system.time(mod <- bayesreg(y ~ ., data, n.samples = 10000, prior = "hs+", thin = 1))
summary(mod)
system.time(mod <- bayesreg(y ~ ., data, n.samples = 10000, prior = "hs+", thin = 1, model = "t"))
summary(mod)
plot(predict(mod))
system.time(mod <- bayesreg(y ~ ., data, n.samples = 10000, prior = "hs+", thin = 1, model = "t", display = T))
